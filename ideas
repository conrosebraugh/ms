1. make a list of all the processes (PID)
    a. find a way to get all the directory names from inside a directory
    b. names that are solely number in /proc are processes
2. (RES)
    a. this is found in statm[1]
3. (USS)
    a. might be possible with statm
        i. subtract nmber of shared pages (statm[2]) from rss (statm[1]) 
4. (SHR)
    a. probably statm[2]. not entirely sure
    *it is statm[2]
5. (PSS)
    a. CAN NOT BE DONE WITH STATM
    b. will be very slow
    c. dictionary of pages
        i. key is page number
        ii. value is list of processes page

import sys, re

def pss_of_process(pid):
    with file('/proc/%s/smaps' % pid) as fp:
        return sum([int(x) for x in re.findall('^Pss:\s+(\d+)', fp.read(), re.M)])
        
        
6. (SWAP)
    a. CAN NOT BE DONE WITH STATM
    *swap can be found in status under VmSwap(total swap in kB)
7. (CMD)
    a. /proc/PID/cmdline maybe. Not sure if we need to parse out args to the command
    *could use /status 'Name:'


Notes:
- Total memory size is found in meminfo

- the following python will return a python list of the pages in your machine:
kpf = open('/proc/kpagecount', 'rb')
cnts = kpf.read()
vals = [ cnts[i:i+8] for i in range(0, len(cnts), 8)]
// OR vals = [ cnts[i:i+8] for i in range(0, NUMPAGES, 8)]
// where NUMPAGES = (total amount of memory)/(page size)
pgcnts = [struct.unpack('q',v)[0] for v in vals ]

- to get the page size in python:
import resource
resource.getpagesize()
#you have no idea how fucking long it took me to find that

- os.getcwd() - store this

- change directory to "/proc"

- glob.glob("/proc/[0-9]*")
